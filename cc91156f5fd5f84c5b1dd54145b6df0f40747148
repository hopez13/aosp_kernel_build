{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "67b9e70a_ca028e67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-10-18T18:47:01Z",
      "side": 1,
      "message": "Note: this is tested by CL:3313425. We can add a simpler test if @yabinc@google.com can provide me a smaller profile (the one for the test was 4MB)",
      "revId": "cc91156f5fd5f84c5b1dd54145b6df0f40747148",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b950f55_516789d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2024-10-18T21:34:53Z",
      "side": 1,
      "message": "Clang accepts an empty file, so that should suffice for a smoke test:\n\n```\n$ touch file.profdata\n$ clang++ -fprofile-sample-use\u003dfile.profdata test.cpp -fuse-ld\u003dlld\n```",
      "parentUuid": "67b9e70a_ca028e67",
      "revId": "cc91156f5fd5f84c5b1dd54145b6df0f40747148",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1b05eee_64ad7158",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-10-18T23:08:01Z",
      "side": 1,
      "message": "\u003e Clang accepts an empty file, so that should suffice for a smoke test:\n\nThis is actually not what I see:\n\nerror: /mnt/sdc/android/kernel/out/bazel/output_user_root/1b6b21355d7d8de5177bf0bcb725bd7f/sandbox/linux-sandbox/905/execroot/_main/common-modules/virtual-device/profile: Could not open profile: Unrecognized sample profile encoding format",
      "parentUuid": "1b950f55_516789d8",
      "revId": "cc91156f5fd5f84c5b1dd54145b6df0f40747148",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73a11247_17e7b2f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2024-10-18T23:20:02Z",
      "side": 1,
      "message": "Can you share the exact command passed to clang?\n\nThere is also a textual format that is recognized by llvm-profdata: https://github.com/llvm/llvm-project/blob/6d347fdfbd018b6555a754219fda461e166f2a64/llvm/test/tools/llvm-profdata/Inputs/sample-profile.proftext#L4\n\nBut I am not sure if clang also recognizes this.  We can try if something similar works.",
      "parentUuid": "b1b05eee_64ad7158",
      "revId": "cc91156f5fd5f84c5b1dd54145b6df0f40747148",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd18fc43_7d72dd54",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2024-10-19T00:11:27Z",
      "side": 1,
      "message": "I was able to reproduce it with `-O2`.  I guess the AutoFDO pipeline is not run at lower optimization levels.\n\nClang accepts the textual profile file I linked above at -O2.",
      "parentUuid": "73a11247_17e7b2f4",
      "revId": "cc91156f5fd5f84c5b1dd54145b6df0f40747148",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}