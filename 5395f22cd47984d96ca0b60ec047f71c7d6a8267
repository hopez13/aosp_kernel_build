{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "72dae56d_f3e46af2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-08-01T19:20:53Z",
      "side": 1,
      "message": "See my comment in CL:3204191: Consider moving the two functions out into gcov_utils.bzl. This is so that kernel_build/kernel_module/kernel_module_group/kernel_modules_install use utilities from this extension./",
      "revId": "5395f22cd47984d96ca0b60ec047f71c7d6a8267",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9ba9373_0b9ba32d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-08-01T19:27:07Z",
      "side": 1,
      "message": "General comment: Did you try subrule()\u0027s? It is the new way Bazel enforces inputs/outputs of common utility functions that takes ctx and a bunch of arguments. The ctx is stripped down so only certain things can be accessed.\n\nFeel free to do this as a follow up; the change is good as-is. Subrule() is an experimental API anyways.",
      "revId": "5395f22cd47984d96ca0b60ec047f71c7d6a8267",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3787b32_984a382c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1961395
      },
      "writtenOn": "2024-08-02T16:08:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72dae56d_f3e46af2",
      "revId": "5395f22cd47984d96ca0b60ec047f71c7d6a8267",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62f9c79e_3fccb402",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1961395
      },
      "writtenOn": "2024-08-02T16:08:33Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "f9ba9373_0b9ba32d",
      "revId": "5395f22cd47984d96ca0b60ec047f71c7d6a8267",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc7100aa_cb0f2e77",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1192,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-08-01T19:17:43Z",
      "side": 1,
      "message": "file_mappings_cmd and mappings_cmd are not full commands; they are arguments.\n\nPerhaps file_mappings_args/mappings_args?\n\nrsync_cmd is a full cmd, so I think its name is correct",
      "range": {
        "startLine": 1192,
        "startChar": 27,
        "endLine": 1192,
        "endChar": 44
      },
      "revId": "5395f22cd47984d96ca0b60ec047f71c7d6a8267",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4007b781_cbbd1a33",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1192,
      "author": {
        "id": 1961395
      },
      "writtenOn": "2024-08-02T16:08:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc7100aa_cb0f2e77",
      "range": {
        "startLine": 1192,
        "startChar": 27,
        "endLine": 1192,
        "endChar": 44
      },
      "revId": "5395f22cd47984d96ca0b60ec047f71c7d6a8267",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}